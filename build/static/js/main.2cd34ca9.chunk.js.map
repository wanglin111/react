{"version":3,"sources":["components/Input.js","components/List.js","components/Todolist.js","index.js"],"names":["Input","this","input","focus","htmlFor","id","ref","inp","value","props","inpValue","type","onChange","handleChange","onClick","addTodo","Component","List","arr1","todos","filter","item","done","arr2","length","renderTodos","style","color","Todolist","e","setState","target","state","title","delTodo","idx","index","toggle","newTodos","JSON","parse","stringify","map","todo","checked","dangerouslySetInnerHTML","__html","localStorage","getItem","setItem","ReactDOM","render","document","getElementById"],"mappings":"6KAwBeA,E,kLAnBPC,KAAKC,MAAMC,U,+BAEL,IAAD,OACL,OACI,6BACI,2BAAOC,QAAQ,OAAf,YAEA,2BACIC,GAAG,MACHC,IAAK,SAAAC,GAAG,OAAE,EAAKL,MAAQK,GACvBC,MAAOP,KAAKQ,MAAMC,SAClBC,KAAK,OACLC,SAAUX,KAAKQ,MAAMI,eAEzB,4BAAQC,QAASb,KAAKQ,MAAMM,SAA5B,qB,GAhBIC,aCmBLC,E,uKAjBX,IAAIC,EAAOjB,KAAKQ,MAAMU,MAAMC,QAAQ,SAACC,GAAD,OAAWA,EAAKC,QACjDC,EAAOtB,KAAKQ,MAAMU,MAAMC,QAAQ,SAACC,GAAD,OAAUA,EAAKC,QAElD,OACE,6BACA,uDAASJ,EAAKM,QACd,4BACKvB,KAAKQ,MAAMgB,aAAY,IAE7B,uDAASF,EAAKC,QACb,wBAAIE,MAAO,CAACC,MAAgB,UACvB1B,KAAKQ,MAAMgB,aAAY,S,GAdfT,aCgGJY,E,kDA3FX,aAAc,IAAD,8BACT,gBAMJf,aAAe,SAACgB,GACZ,EAAKC,SAAS,CAACpB,SAASmB,EAAEE,OAAOvB,SARxB,EAyBbO,QAAU,WACkB,IAArB,EAAKiB,MAAMtB,WAGd,EAAKoB,SAAS,CACVX,MAAM,CACF,CACIc,MAAO,EAAKD,MAAMtB,SAClBY,MAAM,IAHT,mBAKG,EAAKU,MAAMb,UAGvB,EAAKW,SAAS,CAACpB,SAAS,OAtCf,EAyCbwB,QAAU,SAACC,GACP,EAAKL,SAAS,CACVX,MAAO,EAAKa,MAAMb,MAAMC,QAAO,SAACC,EAAKe,GAAN,OAAcA,GAAOD,QA3C/C,EA8CbE,OAAS,SAACD,GACN,IAAIE,EAAWC,KAAKC,MAAMD,KAAKE,UAAU,EAAKT,MAAMb,QACpDmB,EAASF,GAAOd,MAAQgB,EAASF,GAAOd,KACxC,EAAKQ,SAAS,CACVX,MAAOmB,KAlDF,EAqDbb,YAAc,SAACH,GACX,OAAO,EAAKU,MAAMb,MAAMuB,KAAI,SAACC,EAAKR,GAC9B,GAAGb,GAAMqB,EAAKrB,KACV,OAAO,4BACH,2BACIR,QAAS,kBAAI,EAAKuB,OAAOF,IACzBS,QAASD,EAAKrB,KACdX,KAAK,aAET,0BAAMkC,wBAAyB,CAACC,OAAOH,EAAKV,SAC5C,4BACInB,QAAS,kBAAI,EAAKoB,QAAQC,KAD9B,qBA7DZ,EAAKH,MAAQ,CACTtB,SAAU,GACVS,MAAM,IAJD,E,gEAYT,IAAIA,EAAQ4B,aAAaC,QAAQ,SAC9B7B,GACClB,KAAK6B,SAAS,CACVX,MAAOoB,KAAKC,MAAMrB,O,2CAK1B4B,aAAaE,QACT,QACAV,KAAKE,UAAUxC,KAAK+B,MAAMb,U,+BAkDxB,IAAD,EAEoBlB,KAAK+B,MAAvBb,EAFF,EAEEA,MAAMT,EAFR,EAEQA,SAEb,OACI,6BACI,kBAAC,EAAD,CACIA,SAAUA,EACVK,QAASd,KAAKc,QACdF,aAAcZ,KAAKY,eAE3B,kBAAC,EAAD,CACKM,MAAOA,EACPM,YAAaxB,KAAKwB,mB,GAtFZT,aCGvBkC,IAAUC,OACF,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2cd34ca9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n// import './control.css';\r\n\r\nclass Input extends Component {\r\n    componentDidMount(){\r\n        this.input.focus();//获得焦点\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label htmlFor=\"inp\">todolist</label>\r\n\r\n                <input \r\n                    id='inp'\r\n                    ref={inp=>this.input = inp}\r\n                    value={this.props.inpValue} \r\n                    type=\"text\" \r\n                    onChange={this.props.handleChange}\r\n                />\r\n                <button onClick={this.props.addTodo}>添加</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Input;\r\n","import React, { Component } from 'react';\r\n\r\nclass List extends Component{\r\n\r\n  render(){\r\n    let arr1 = this.props.todos.filter( (item) => !item.done);\r\n   let arr2 = this.props.todos.filter( (item) => item.done);\r\n    \r\n    return(\r\n      <div >\r\n      <h2>正在进行{arr1.length}</h2>\r\n      <ul>\r\n          {this.props.renderTodos(false)}\r\n      </ul>\r\n     <h2>已经完成{arr2.length}</h2>\r\n      <ul style={{color:3<2?'red':'green'}}>\r\n          {this.props.renderTodos(true)}\r\n      </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default List;","import React, { Component } from 'react';\r\n// import './control.css';\r\nimport Input from './Input';\r\nimport List from './List'\r\n\r\n// 组件名首字母一定要大写\r\nclass Todolist extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:[]\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        // this.input.focus();\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        );\r\n    }\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                 ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''});\r\n\r\n    }\r\n    delTodo = (idx)=>{\r\n        this.setState({\r\n            todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        })\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                    <input \r\n                        onClick={()=>this.toggle(idx)}\r\n                        checked={todo.done} \r\n                        type=\"checkbox\"\r\n                    />\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button \r\n                        onClick={()=>this.delTodo(idx)}\r\n                    >\r\n                        删除\r\n                    </button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        \r\n        const {todos,inpValue} = this.state;\r\n        // let arr1 = todos.filter( item => !item.done)\r\n        return (\r\n            <div>            \r\n                <Input\r\n                    inpValue={inpValue} \r\n                    addTodo={this.addTodo}\r\n                    handleChange={this.handleChange}\r\n                />\r\n            <List \r\n                 todos={todos}\r\n                 renderTodos={this.renderTodos} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Todolist;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Home from './pages/Home.js';\n// import Control from './components/Control';\n// import Todolist from './components/Todolist';\nimport Todolist from './components/Todolist'\n// import App from './pages/App'\n// import HOC,{Detail} from './pages/HOC'\n\nReactDOM .render(\n        <Todolist />,\n        document.getElementById('root')\n);\n//当前文件只能默认导出一个\n// export default Home;\n// import $ from 'jquery';\n\n// console.log($);\n\n// let ele=React.createElement('h1',\n// {id:'title'},\n// 'hello react',\n// React.createElement('div',\n// {},\n// 'hello'));//与上面效果一样\n// console.log(ele);\n// setInterval(()=>{\n//     let ele=<h1 id=\"title\" className=\"tit\">\n//     hello\n//     </h1>;\n//     <div>hello</div>\n//     ReactDOM.render(\n//         ele,\n//          document.getElementById('root')\n//     );\n// },1000)\n//函数组件\n//UI组件、展示组件、木偶组件\n// function App(props){\n//     const{title,di}=props;\n//     return<div>\n//         <div>hello</div>\n//         <div>{props.title}</div>\n//         <div>{id}</div>\n//         <div>{title}</div>\n//         </div>\n// }\n// ReactDOM .render(\n//     <Demo title=\"abc\" id=\"adp\"/>,//title=\"任意值\"\n//     document.getElementById('root')\n\n// )\n//智能组件\n// class Demo extends React.Component{\n//     render(){\n//     return <div>\n//     <App title=\"abc\" id=\"adp\"/>,//title=\"任意值\"\n//     </div>\n        \n//     }\n// }\n\n//封装ReactDom方法\n//将JS对象渲染到DOM中\n// let ReactDom={\n//     render(eleObj,container){\n//         //解构\n//         const{type,props}=eleObj;\n//         //创建第一层节点\n//         let ele=document.createElement(type);\n//         //遍历属性对象，将属性添加到第一层节点对象上\n//         for(const prop in props){\n//            if(prop==\"children\"){\n//                if(typeof props.children==\"string\"){\n//                 const txtNode=document.createTextNode(child);\n//                 ele.appendChild(txtNode);\n//                 break;\n//                }\n//             //将第一层节点对象的子元素添加进去\n//             props.children.forEach(child => {\n//                if(typeof child==\"string\"){\n//                     const txtNode=document.createTextNode(child);\n//                     ele.appendChild(txtNode);\n//                 } else{\n//                     ReactDom.render(child,ele);//递归调用\n//                 }\n//             });\n           \n//            } else{\n//             // ele.setAttribute('class',props[prop]);与下作用一致\n//                ele[prop]=props[prop];\n//            }\n//         }\n//         //将第一层dom节点添加到container中\n//         container.appendChild(ele);\n//     }\n// }\n\n\n//1.原生JS，DOM操作（jq）\n//2.react，开发效率高，性能高\n//3.环境搭建，创建一个项目，运行\n//4.JSX语法\n/*\nalt+上下键\nctrl+d\nalt+shift+上下键\nalt+鼠标点击\n\n*/"],"sourceRoot":""}